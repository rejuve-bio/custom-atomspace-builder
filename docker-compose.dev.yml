# Development Docker Compose configuration for Custom Atomspace Builder

services:
  # Main FastAPI application (development mode)
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: custom-atomspace-api-dev
    ports:
      - "${API_HOST_PORT}:${API_CONTAINER_PORT}"
    environment:
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=${NEO4J_BOLT_PORT}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_DATABASE=${NEO4J_DATABASE}
      - HUGEGRAPH_HOST=hugegraph
      - HUGEGRAPH_PORT=${HUGEGRAPH_REST_PORT}
      - HUGEGRAPH_GRAPH=${HUGEGRAPH_GRAPH}
      - ANNOTATION_SERVICE_URL=${ANNOTATION_SERVICE_URL}
      - ANNOTATION_SERVICE_TIMEOUT=${ANNOTATION_SERVICE_TIMEOUT}
      - PYTHONPATH=/app
    depends_on:
      neo4j:
        condition: service_healthy
      hugegraph:
        condition: service_healthy
    volumes:
      - .:/app
      - ./output:/app/output
      - ./hugegraph-loader:/app/hugegraph-loader
    networks:
      - atomspace-network
    restart: unless-stopped
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "${API_CONTAINER_PORT}", "--reload"]

  # Neo4j database (development)
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j-atomspace-dev
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT}:7474"   # HTTP
      - "${NEO4J_BOLT_PORT}:7687"   # Bolt
    volumes:
      - neo4j_data_dev:/data
      - neo4j_logs_dev:/logs
      - neo4j_import_dev:/var/lib/neo4j/import
      - neo4j_plugins_dev:/plugins
    environment:
      # Authentication
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      
      # Memory settings (reduced for development)
      - NEO4J_dbms_memory_heap_initial__size=${NEO4J_HEAP_INITIAL_SIZE_DEV}
      - NEO4J_dbms_memory_heap_max__size=${NEO4J_HEAP_MAX_SIZE_DEV}
      - NEO4J_dbms_memory_pagecache_size=${NEO4J_PAGECACHE_SIZE_DEV}
      
      # APOC Plugin
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      
      # CSV import settings
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_server_directories_import=import
      
      # Performance
      - NEO4J_server_default__listen__address=0.0.0.0
    networks:
      - atomspace-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USERNAME}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # HugeGraph server (development)
  hugegraph:
    image: hugegraph/hugegraph:latest
    container_name: hugegraph-server-dev
    restart: unless-stopped
    ports:
      - "${HUGEGRAPH_REST_PORT}:8080"   # REST API
      - "${HUGEGRAPH_WS_PORT}:8182"   # WebSocket
    volumes:
      - hugegraph_data_dev:/opt/hugegraph/data
      - hugegraph_logs_dev:/opt/hugegraph/logs
    environment:
      - HUGEGRAPH_GRAPH_NAME=${HUGEGRAPH_GRAPH}
    networks:
      - atomspace-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/graphs/${HUGEGRAPH_GRAPH}/conf"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Hubble UI (commented out due to build issues - can be enabled later)
  # hubble:
  #   build: ./hugegraph-hubble
  #   container_name: hugegraph-hubble-dev
  #   restart: unless-stopped
  #   ports:
  #     - "${HUBBLE_PORT}:8088"
  #   environment:
  #     - HUGEGRAPH_HOST=hugegraph
  #     - HUGEGRAPH_PORT=${HUGEGRAPH_REST_PORT}
  #   depends_on:
  #     hugegraph:
  #       condition: service_healthy
  #   networks:
  #     - atomspace-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8088/api/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

  # Development tools
  dev-tools:
    image: busybox:latest
    container_name: dev-tools
    command: ["sh", "-c", "echo 'Development tools container' && sleep infinity"]
    volumes:
      - .:/workspace
    networks:
      - atomspace-network
    profiles:
      - tools

volumes:
  neo4j_data_dev:
  neo4j_logs_dev:
  neo4j_import_dev:
  neo4j_plugins_dev:
  hugegraph_data_dev:
  hugegraph_logs_dev:

networks:
  atomspace-network:
    driver: bridge 